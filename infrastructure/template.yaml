AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity IPV CRI Otg-Hmrc API"

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Timeout: 3

Parameters:
  TotpSecretName:
    Type: String

  ClientSecretName:
    Type: String

  ClientId:
    Type: String

  OAuthUrl:
    Type: String
  
  BearerTokenSecretName:
    Type: String

Resources:
  ClientIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Ref ClientId
      Description: HMRC Client Id

  OAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Ref OAuthUrl 
      Description: HMRC OAuth Url

  BearerTokenExpiry:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: ""
        

  BearerTokenHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/bearer-token-handler
      Handler: bearer-token-handler.lambdaHandler
      FunctionUrlConfig:
        AuthType: AWS_IAM
        Cors:
          AllowOrigins: ["*"]
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/bearer-token-handler.ts

  TotpGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/totp-generator
      Handler: totp-generator-handler.lambdaHandler
      FunctionUrlConfig:
        AuthType: AWS_IAM
        Cors:
          AllowOrigins: ["*"]
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/totp-generator-handler.ts

  OAuthTokenStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-OAuthTokenGenerator"
      DefinitionUri: ../step-functions/oauth-token-generator.asl.json
      DefinitionSubstitutions:
        TotpGeneratorFunctionArn: !GetAtt TotpGeneratorFunction.Arn
        BearerTokenFunctionArn: !GetAtt BearerTokenHandlerFunction.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TotpGeneratorFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BearerTokenHandlerFunction
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
        - SSMParameterReadPolicy:
            ParameterName: !Ref ClientIdParameter
        - SSMParameterReadPolicy:
            ParameterName: !Ref OAuthUrlParameter
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:PutSecretValue
              Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:PutParameter
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"

Outputs:
  BearerTokenHandlerFunctionURLEndpoint:
    Description: FURLFunction function name
    Value: !GetAtt BearerTokenHandlerFunctionUrl.FunctionUrl
  BearerTokenHandlerFunction:
    Description: "BearerTokenHandler Lambda Function ARN"
    Value: !GetAtt BearerTokenHandlerFunction.Arn
  BearerTokenHandlerFunctionIamRole:
    Description: "Implicit IAM Role created for BearerTokenHandler function"
    Value: !GetAtt BearerTokenHandlerFunctionRole.Arn

  TotpGeneratorFunctionURLEndpoint:
    Description: FURLFunction function name
    Value: !GetAtt TotpGeneratorFunctionUrl.FunctionUrl
  TotpGeneratorFunction:
    Description: "TotpGenerator Lambda Function ARN"
    Value: !GetAtt TotpGeneratorFunction.Arn
  TotpGeneratorFunctionIamRole:
    Description: "Implicit IAM Role created for TotpGenerator function"
    Value: !GetAtt TotpGeneratorFunctionRole.Arn
