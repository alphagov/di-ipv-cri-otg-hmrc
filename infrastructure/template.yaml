AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV HMRC OAuth Token Generator
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  TotpSecretName:
    Type: String
    Default: TotpSecretName
  ClientSecretName:
    Type: String
    Default: HMRC_Client_Secret
  ClientId:
    Type: String
    Default: HMRC_Client_Id
  OAuthUrl:
    Type: String
    Default: https://test-api.service.hmrc.gov.uk/oauth/token
  BearerTokenName:
    Type: String
    Default: HMRCBearerToken
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, build, staging, integration, production]
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsDevLikeEnvironment:
    !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]

Mappings:
  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

Globals:
  Function:
    Timeout: 30
    CodeUri: ..
    Runtime: nodejs18.x
    Architectures: [arm64]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue otg-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - !ImportValue otg-vpc-ProtectedSubnetIdA
        - !ImportValue otg-vpc-ProtectedSubnetIdB
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]

Resources:
  OAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Ref OAuthUrl
      Description: HMRC OAuth URL

  BearerTokenExpiry:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: AWS::NoValue

  PrivateOTGApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private OAuth Token Generator API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateOTGApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths:
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy: !If
          - IsLocalDevEnvironment
          - !Ref AWS::NoValue
          - CustomStatements:
              - Effect: Allow
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"

  PrivateOTGApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateOTGApi}-private-AccessLogs
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  BearerTokenHandlerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/bearer-token-handler/src/bearer-token-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  BearerTokenHandlerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  TotpGeneratorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/totp-generator/src/totp-generator-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/TotpGeneratorFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  TotpGeneratorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/TotpGeneratorFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  OAuthTokenStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-OAuthTokenGenerator"
      DefinitionUri: ../step-functions/oauth-token-generator.asl.json
      DefinitionSubstitutions:
        TotpGeneratorFunctionArn: !GetAtt TotpGeneratorFunction.Arn
        BearerTokenFunctionArn: !GetAtt BearerTokenHandlerFunction.Arn
        BearerTokenName: !Ref BearerTokenName
        OAuthUrlParameter: !Ref OAuthUrlParameter
        BearerTokenExpiry: !Ref BearerTokenExpiry
        ClientSecretName: !Ref ClientSecretName
        TotpSecretName: !Ref TotpSecretName
        ClientId: !Ref ClientId
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TotpGeneratorFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BearerTokenHandlerFunction
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TotpSecretName}-??????
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ClientSecretName}-??????
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ClientId}-??????
        - SSMParameterReadPolicy:
            ParameterName: !Ref OAuthUrlParameter
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:PutSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenName}-??????
        - Statement:
            - Effect: Allow
              Action:
                - ssm:PutParameter
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BearerTokenExpiry}
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  BearerTokenRetrievalStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub "${AWS::StackName}-BearerTokenRetrieval"
      DefinitionUri: ../step-functions/bearer-token-retrieval.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt BearerTokenRetrievalStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRCBearerToken/*
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  BearerTokenRetrievalStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-BearerTokenRetrievalStateMachine-state-machine-logs
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref BearerTokenRetrievalStateMachine
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

Outputs:
  PrivateApiGatewayId:
    Description: Private API Gateway ID for OAuth Token Generator
    Value: !Ref PrivateOTGApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  OAuthTokenStateMachineArn:
    Description: OTG state machine ARN
    Value: !Ref OAuthTokenStateMachine
