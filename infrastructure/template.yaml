AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV HMRC OAuth Token Generator
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  SandboxOAuthUrl:
    Type: String
    Default: https://test-api.service.hmrc.gov.uk/oauth/token
  ProductionOAuthUrl:
    Type: String
    Default: https://api.service.hmrc.gov.uk/oauth/token
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, build, staging, integration, production]
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
    Default: otg-vpc
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""
  DeployAlarmsInDev:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: true
  SupportManualURL:
    Description: "Link to the OTG support manual"
    Type: String
    Default: 'https://govukverify.atlassian.net/wiki/spaces/OJ/pages/4090724856/OAuth+Token+Generator+support+runbook'

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsDevLikeEnvironment:
    !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  IsNotDevLikeEnvironment: !Not
    - !Condition IsDevLikeEnvironment
  IsNotProdEnvironment: !Not
    - !Condition IsProdEnvironment
  DeployAlarms: !Or
    - Condition: IsProdEnvironment
    - !Equals [!Ref DeployAlarmsInDev, true]

Mappings:
  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

Globals:
  Function:
    Timeout: 30
    CodeUri: ..
    Runtime: nodejs18.x
    Architectures: [arm64]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue otg-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - !ImportValue otg-vpc-ProtectedSubnetIdA
        - !ImportValue otg-vpc-ProtectedSubnetIdB
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]

Resources:
  StubTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-stub
      Description: OTG refresh schedule for the stub token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: "ENABLED"
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "stub" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: !GetAtt RefreshSchedulerRole.Arn

  SandboxTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-sandbox
      Description: OTG refresh schedule for the sandbox token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: "ENABLED"
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "sandbox" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: !GetAtt RefreshSchedulerRole.Arn

  ProductionTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsProdEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-production
      Description: OTG refresh schedule for the production token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: "ENABLED"
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "production" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: !GetAtt RefreshSchedulerRole.Arn

  RefreshSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-RefreshSchedulerRole
      Description: Role to allow EventBridge to run a state machine
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: scheduler.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref OAuthTokenStateMachine
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  StubOAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/stub
      Type: String
      Value:
        !Join [
          "",
          [!ImportValue third-party-stubs-ImposterStubApiUrl, "/oauth/token"],
        ]
      Description: Imposter Mock of HMRC OAuth URL

  SandboxOAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/sandbox
      Type: String
      Value: !Ref SandboxOAuthUrl
      Description: HMRC Sandbox OAuth URL

  ProductionOAuthUrlParameter:
    Condition: IsNotDevLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/production
      Type: String
      Value: !Ref ProductionOAuthUrl
      Description: HMRC Production OAuth URL

  PrivateOTGApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private OAuth Token Generator API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateOTGApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths:
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy: !If
          - IsLocalDevEnvironment
          - !Ref AWS::NoValue
          - CustomStatements:
              - Effect: Allow
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"

  PrivateOTGApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateOTGApi}-private-AccessLogs
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  PrivateOTGApiAccessLogSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref PrivateOTGApiAccessLogGroup

  PrivateOTGApiFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PrivateOTGApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PrivateOTGApi-Fatalerror"

  PrivateOTGApiFatalErrorAlarm:
    DependsOn:
      - "PrivateOTGApiFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-PrivateOTGApi-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs."
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: PrivateOTGApi-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BearerTokenHandlerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/bearer-token-handler/src/bearer-token-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  BearerTokenHandlerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  BearerTokenHandlerFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref BearerTokenHandlerFunctionLogGroup

# BearerTokenHandlerFunction Alarms
  BearerTokenHandlerFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BearerTokenHandlerFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "BearerTokenHandlerFunction-Fatalerror"

  BearerTokenHandlerFunctionFatalErrorAlarm:
    DependsOn:
      - "BearerTokenHandlerFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      MetricName: BearerTokenHandlerFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BearerTokenHandlerFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${BearerTokenHandlerFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref BearerTokenHandlerFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  TotpGeneratorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/totp-generator/src/totp-generator-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/TotpGeneratorFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  TotpGeneratorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/TotpGeneratorFunction
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  TotpGeneratorFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref TotpGeneratorFunctionLogGroup

# TotpGeneratorFunction Alarms
  TotpGeneratorFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref TotpGeneratorFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "TotpGeneratorFunction-Fatalerror"

  TotpGeneratorFunctionFatalErrorAlarm:
    DependsOn:
      - "TotpGeneratorFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-TotpGeneratorFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      MetricName: TotpGeneratorFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TotpGeneratorFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${TotpGeneratorFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-TotpGeneratorFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref TotpGeneratorFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  SecretsManagerHandlerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: IAM Role For SecretsManagerHandler Function
      RoleName: !Sub "${AWS::StackName}-SecretsManagerHandler"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - !Ref SecretsManagerHandlerRolePolicy
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "SecretsManagerHandlerRole"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "govuk-one-login/di-ipv-cri-otg-hmrc/infrastructure/template.yaml"

  SecretsManagerHandlerRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      # checkov:skip=CKV_AWS_111: Not applicable here
      ManagedPolicyName:
        Fn::Join:
          - "-"
          - - !Ref AWS::StackName
            - "SecretsManagerHandlerRolePolicy"
            - Fn::Select:
                - 4
                - Fn::Split:
                    - "-"
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - "/"
                            - Ref: AWS::StackId
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: EnforceStayinSpecificVpc
            Effect: Allow
            Action:
              - 'lambda:CreateFunction'
              - 'lambda:UpdateFunctionConfiguration'
            Resource:
              - "*"
            Condition:
              StringEquals:
                "lambda:VpcIds":
                  - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
          - Sid: OrganizationsListAccountsPolicy
            Effect: Allow
            Action:
              - "organizations:ListAccounts"
            Resource:
              - "*"
          - Sid: VPCAccessPolicy
            Effect: Allow
            Action:
              - "ec2:CreateNetworkInterface"
              - "ec2:DeleteNetworkInterface"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:DetachNetworkInterface"
            Resource:
              - "*"
          - Sid: KMSDecryptPolicy
            Effect: Allow
            Action: "kms:Decrypt"
            Resource:
              Fn::Sub:
                - "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/${keyId}"
                - keyId: !Ref SecretsManagerHandlerEncryptionKey
          - Sid: AWSSecretsManagerGetSecretValuePolicy
            Effect: Allow
            Action: "secretsmanager:GetSecretValue"
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*

  SecretsManagerHandlerEncryptionKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: Symmetric key used to encrypt secrets manager token
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'SecretsManagerAccess'
            Effect: Allow
            Principal:
              Service: secretsmanager.amazonaws.com
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
          - Sid: 'SecretsManagerFunctionRoleAccess'
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam:${AWS::Region}:${AWS::AccountId}:role/${AWS::StackName}-SecretsManagerHandler"
            Action:
              - "kms:Decrypt*"
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
                "kms:KeyUsage": "ENCRYPT_DECRYPT"
                "kms:ViaService":
                  - !Sub "lambda.${AWS::Region}.amazonaws.com"
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "SecretsManagerHandlerEncryptionKey"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "govuk-one-login/di-ipv-cri-otg-hmrc/infrastructure/template.yaml"

  SecretsManagerHandlerEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/secretsmanager/token
      TargetKeyId: !Ref SecretsManagerHandlerEncryptionKey

  SecretsManagerHandlerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Role: !GetAtt SecretsManagerHandlerRole.Arn
      Handler: lambdas/secrets-manager-handler/src/secrets-manager-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/SecretsManagerHandlerFunction
      CodeSigningConfigArn:
        !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]

  SecretsManagerHandlerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/SecretsManagerHandlerFunction
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  SecretsManagerHandlerFunctionSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref SecretsManagerHandlerFunctionLogGroup

# SecretsManagerHandlerFunction Alarms
  SecretsManagerHandlerFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref SecretsManagerHandlerFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "SecretsManagerHandlerFunction-Fatalerror"

  SecretsManagerHandlerFunctionFatalErrorAlarm:
    DependsOn:
      - "SecretsManagerHandlerFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-SecretsManagerHandlerFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      MetricName: SecretsManagerHandlerFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  SecretsManagerHandlerFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${SecretsManagerHandlerFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-SecretsManagerHandlerFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref SecretsManagerHandlerFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  OAuthTokenStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-OAuthTokenGenerator"
      DefinitionUri: ../step-functions/oauth-token-generator.asl.json
      DefinitionSubstitutions:
        TotpGeneratorFunctionArn: !GetAtt TotpGeneratorFunction.Arn
        BearerTokenFunctionArn: !GetAtt BearerTokenHandlerFunction.Arn
        StackName: !Ref AWS::StackName
        RefreshSchedulerRole: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-RefreshSchedulerRole
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt OAuthTokenStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TotpGeneratorFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BearerTokenHandlerFunction
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/TOTPSecret/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/ClientSecret/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/ClientId/*
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter*/HMRC/OAuthURL/*
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:PutSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
        - Statement:
            - Effect: Allow
              Action:
                - scheduler:UpdateSchedule
              Resource: !Sub arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-RefreshSchedulerRole
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  OAuthTokenStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}-OAuth-state-machine-logs"
      RetentionInDays: !If [IsProdEnvironment, 30, 7]

  OAuthTokenStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup

  OAuthTokenStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.type = "ExecutionFailed")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "OAuthTokenStateMachine-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  OAuthTokenStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: "OAuth Token failed 4 or more requests in the last hour"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-OAuth-state-machine-alarms"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref OAuthTokenStateMachine

  BearerTokenRetrievalStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub "${AWS::StackName}-BearerTokenRetrieval"
      DefinitionUri: ../step-functions/bearer-token-retrieval.asl.json
      DefinitionSubstitutions:
        SecretsManagerHandlerFunctionArn: !GetAtt SecretsManagerHandlerFunction.Arn
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt BearerTokenRetrievalStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref SecretsManagerHandlerFunction
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  BearerTokenRetrievalStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-BearerTokenRetrieval-state-machine-logs
      RetentionInDays: !If [IsDevLikeEnvironment, 7, 30]

  BearerTokenRetrievalStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref BearerTokenRetrievalStateMachineLogGroup

  BearerTokenRetrievalStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BearerTokenRetrievalStateMachineLogGroup
      FilterPattern: '{($.type = "ExecutionFailed")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "BearerTokenRetrievalStateMachine-Error"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  BearerTokenRetrievalStateMachineAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: "Bearer Token failed 4 or more requests in the last hour"
      AlarmName: !Sub "${AWS::StackName}-${Environment}-BearerTokenRetrievalStateMachineAlarm"
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      EvaluationPeriods: 12
      MetricName: "ExecutionsFailed"
      Namespace: AWS/States
      Period: 300
      Statistic: Sum
      Threshold: 0
      TreatMissingData: missing
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref BearerTokenRetrievalStateMachine

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref BearerTokenRetrievalStateMachine
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  SuccessTokenGenerationMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.details.name = "Success")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: SuccessfulTokenGenerationMetric
          MetricNamespace: "otg-hmrc-service"

  FailTokenGenerationMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.details.name = "Fail")}'
      MetricTransformations:
        - MetricValue: 1
          MetricName: FailTokenGenerationMetric
          MetricNamespace: "otg-hmrc-service"

# BackEnd5xxAlarms
  5XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-5XXErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the otg api-gateway. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  5XXErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-5XXErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the otg api-gateway. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-Token5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-Token5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

# BackEnd4xxAlarms
  4XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-4XXErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the otg api-gateway. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  Token4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-Token4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

# BackEndLatencyAlarm
  LatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-apiGWLatencyAlarm"
      AlarmDescription: !Sub "There has been increased latency on backend api-gateway. ${SupportManualURL}"
      ActionsEnabled: false  # disabled until we're ready for alarm actions to fire
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Maximum

Outputs:
  PrivateApiGatewayId:
    Description: Private API Gateway ID for OAuth Token Generator
    Value: !Ref PrivateOTGApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  OAuthTokenStateMachineArn:
    Description: OTG state machine ARN
    Value: !Ref OAuthTokenStateMachine
  BearerTokenRetrievalStateMachineArn:
    Description: Bearer Token Retrieval state machine ARN
    Value: !Ref BearerTokenRetrievalStateMachine
