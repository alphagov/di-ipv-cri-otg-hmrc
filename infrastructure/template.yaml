AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity IPV CRI Otg-Hmrc API"

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue otg-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        [
          !ImportValue otg-vpc-ProtectedSubnetIdA,
          !ImportValue otg-vpc-ProtectedSubnetIdB,
        ]
    Runtime: nodejs18.x
    Architectures:
      - arm64
    Timeout: 30
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - EnforceCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              dynatraceSecretArn,
            ]

Parameters:
  CodeSigningEnabled:
    Type: "String"
    Default: "true"

  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline

  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"

  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production

  TotpSecretName:
    Type: String
    Default: "TotpSecretName"

  ClientSecretName:
    Type: String
    Default: "HMRC_Client_Secret"

  BearerTokenSecretName:
    Type: String
    Default: "HMRCBearerToken"

  ClientId:
    Type: String
    Default: "HMRC_Client_Id"

  OAuthUrl:
    Type: String
    Default: "https://test-api.service.hmrc.gov.uk/oauth/token"

Mappings:
  # Adding Dynatrace Lambda layer
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

Conditions:
  EnforceCodeSigning: !Equals
    - !Ref CodeSigningEnabled
    - true

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Resources:
  OAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: !Ref OAuthUrl
      Description: HMRC OAuth Url

  BearerTokenExpiry:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: AWS::NoValue

  BearerTokenHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/bearer-token-handler
      Handler: bearer-token-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/bearer-token-handler.ts

  TotpGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/totp-generator
      Handler: totp-generator-handler.lambdaHandler
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/totp-generator-handler.ts

  OAuthTokenStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-OAuthTokenGenerator"
      DefinitionUri: ../step-functions/oauth-token-generator.asl.json
      DefinitionSubstitutions:
        TotpGeneratorFunctionArn: !GetAtt TotpGeneratorFunction.Arn
        BearerTokenFunctionArn: !GetAtt BearerTokenHandlerFunction.Arn
        BearerTokenSecretName: !Ref BearerTokenSecretName
        OAuthUrlParameter: !Ref OAuthUrlParameter
        BearerTokenExpiry: !Ref BearerTokenExpiry
        ClientSecretName: !Ref ClientSecretName
        TotpSecretName: !Ref TotpSecretName
        ClientId: !Ref ClientId
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TotpGeneratorFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BearerTokenHandlerFunction
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TotpSecretName}-??????
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ClientSecretName}-??????
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ClientId}-??????
        - SSMParameterReadPolicy:
            ParameterName: !Ref OAuthUrlParameter
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:PutSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BearerTokenSecretName}-??????
        - Statement:
            - Effect: Allow
              Action:
                - ssm:PutParameter
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BearerTokenExpiry}
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

Outputs:
  BearerTokenHandlerFunction:
    Description: "BearerTokenHandler Lambda Function ARN"
    Value: !GetAtt BearerTokenHandlerFunction.Arn

  BearerTokenHandlerFunctionIamRole:
    Description: "Implicit IAM Role created for BearerTokenHandler function"
    Value: !GetAtt BearerTokenHandlerFunctionRole.Arn

  OAuthTokenStateMachineArn:
    Description: Otg state machine ARN
    Value: !Ref OAuthTokenStateMachine

  OAuthTokenStateMachineRole:
    Description: "IAM Role created for OAuth token state machine based on the specified"
    Value: !GetAtt OAuthTokenStateMachineRole.Arn

  TotpGeneratorFunction:
    Description: "TotpGenerator Lambda Function ARN"
    Value: !GetAtt TotpGeneratorFunction.Arn

  TotpGeneratorFunctionIamRole:
    Description: "Implicit IAM Role created for TotpGenerator function"
    Value: !GetAtt TotpGeneratorFunctionRole.Arn
